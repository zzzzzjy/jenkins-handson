pipeline {
  agent any 

  options {
    buildDiscarder(logRotator(daysToKeepStr: '7', numToKeepStr: '4'))
    disableConcurrentBuilds()
  }
  
  environment {
      NEW_VERSION = "1.3.0"
      dockerRegistry="https://index.docker.io/v1/"
      tag="0.1.2"
      image="zzzzzjy/sample"
      namespace="default"
      deployment="deployment/sample.yaml"
      service="deployment/service.yaml"
  }

  tools {
    maven 'maven'
  }
  
  stages {
    stage("Git-clone") {
      steps {
        echo "Git clone from gitlab repository"
        git branch: 'dev', url: 'https://github.com/zzzzzjy/jenkins-handson.git'
      }
    }

    stage("Build/Test") {
      steps {
        echo "Building the application..."   
        sh "mvn clean package -Dmaven.testSkips=true "
      }
    }

    stage("Code Analysis") {
      steps {
        echo "inspecting the application..."
      }
    }

    stage("Build and Push") {
      steps {
        echo "Building and push the image..."
        withCredentials ([
          usernamePassword(
            credentialsId: 'zzzzzjy',
            usernameVariable: 'DOCKER_HUB_USER', 
            passwordVariable: 'DOCKER_HUB_PASSWORD'
          )
        ]) {
          echo "some credentials info : ${DOCKER_HUB_USER}, ${DOCKER_HUB_PASSWORD}"

					sh "podman login --tls-verify=false --username ${DOCKER_HUB_USER} --password ${DOCKER_HUB_PASSWORD} ${dockerRegistry}"
					sh "podman build  -t ${image}:${tag} . -f deployment/Dockerfile"
					sh "podman tag ${image}:${tag} ${image}:hello"
					sh "podman push ${image}:hello"    
        }
      }
    }

    stage("Deploy") {
      steps {
          echo "Delete deployment... "
          sh "kubectl apply -n ${namespace} -f ${deployment}"
          sh "sleep 3"
          sh "kubectl apply -n ${namespace} -f ${service}"
      }
    }
  }
}
